import os
import logging
from pyrogram import Client, filters
from telegraph import upload_file
from config import Config
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

Webot = Client(
   "Telegraph Uploader",
   api_id=Config.APP_ID,
   api_hash=Config.API_HASH,
   bot_token=Config.TG_BOT_TOKEN,
)

@Webot.on_message(filters.command("start"))
async def start(client, message):
   if message.chat.type == 'private':
       await Webot.send_message(
               chat_id=message.chat.id,
               text="""<b> ú·¥á ü ü·¥è.. üíù …¥·¥á…¥·¥ú ·¥ç·¥á ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú  ô·¥è·¥õ …¥…™.. üòä

…™ ·¥Ñ·¥Ä…¥ ·¥ú·¥ò ü·¥è·¥Ä·¥Ö ·¥ò ú·¥è·¥õ·¥ès ·¥è Ä ·¥†…™·¥Ö·¥á·¥ès ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú.·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è: @santhuvc

 ú…™·¥õ  ú·¥á ü·¥ò  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è “ì…™…¥·¥Ö ·¥è·¥ú·¥õ ·¥ç·¥è Ä·¥á ·¥Ä ô·¥è·¥ú·¥õ  ú·¥è·¥° ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á</b>""",   
                            reply_markup=InlineKeyboardMarkup(
                                [[
                                        InlineKeyboardButton(
                                            "üíô…¥…™ ô ô·¥Ä  ú·¥á ü·¥òüíõ", callback_data="help"),
                                        InlineKeyboardButton(
                                            "üî∞…¥·¥á·¥õ·¥°·¥è Ä·¥ãüî∞", url="https://t.me/santhuvc")
                                    ],[
                                      InlineKeyboardButton(
                                            "üíö…¥…™ ô ô·¥Ä s·¥Ä…¥·¥õ ú·¥ú‚ù§‚ù§", url="https://t.me/santhu_music_bot")
                                    ]]
                            ),        
            disable_web_page_preview=True,        
            parse_mode="html")

@Webot.on_message(filters.command("help"))
async def help(client, message):
    if message.chat.type == 'private':   
        await Webot.send_message(
               chat_id=message.chat.id,
               text="""<b>Telegraph Bot Help!

·¥ä·¥ús·¥õ s·¥á…¥·¥Ö ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥è Ä ·¥†…™·¥Ö·¥á·¥è  ü·¥áss ·¥õ ú·¥Ä…¥ ùüª·¥ç ô “ì…™ ü·¥á s…™·¥¢·¥á, …™' ü ü ·¥ú·¥ò ü·¥è·¥Ä·¥Ö …™·¥õ ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú.

·¥ä·¥è…™…¥ “ì·¥è Ä ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás: @santhuvc</b>""",
        reply_markup=InlineKeyboardMarkup(
                                [[
                                        InlineKeyboardButton(
                                            "‚óÅ", callback_data="start"),
                                        InlineKeyboardButton(
                                            "üôÑ·¥Ä ô·¥è·¥ú·¥õ …¥…™ ô ô·¥Äüßê", callback_data="about"),
                                  ],[
                                        InlineKeyboardButton(
                                            "üíö…¥…™ ô ô·¥Ä s·¥Ä…¥·¥õ ú·¥ú‚ù§üíñ", url="https://t.me/santhu_music_bot")
                                    ]]
                            ),        
            disable_web_page_preview=True,        
            parse_mode="html")

@Webot.on_message(filters.command("about"))
async def about(client, message):
    if message.chat.type == 'private':   
        await Webot.send_message(
               chat_id=message.chat.id,
               text="""<b>About Telegraph Bot!</b>

<b>ü§é·¥è·¥°…¥·¥á Äüíò:</b> <a href="https://t.me/santhu_music_bot">Santhu </a>

<b>üíù…¥·¥á·¥õ·¥°·¥è Ä·¥ãüíñ:</b> <a href="https://t.me/santhuvc">Santhu vc </a>


<b>~ @santhuvc</b>""",
     reply_markup=InlineKeyboardMarkup(
                                [[
                                        InlineKeyboardButton(
                                            "‚óÅ", callback_data="help"),
                                    ]]
                            ),        
            disable_web_page_preview=True,        
            parse_mode="html")

@Webot.on_message(filters.photo)
async def telegraphphoto(client, message):
    msg = await message.reply_text("·¥ú·¥ò ü·¥è·¥Ä·¥Ö…™…¥…¢ ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú...")
    download_location = await client.download_media(
        message=message, file_name='root/jetg')
    try:
        response = upload_file(download_location)
    except:
        await msg.edit_text("Photo size should be less than 5mb!") 
    else:
        await msg.edit_text(f'**https://telegra.ph{response[0]}**',
            disable_web_page_preview=True,
        )
    finally:
        os.remove(download_location)

@Webot.on_message(filters.video)
async def telegraphvid(client, message):
    msg = await message.reply_text("·¥ú·¥ò ü·¥è·¥Ä·¥Ö…™…¥…¢ ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú...")
    download_location = await client.download_media(
        message=message, file_name='root/jetg')
    try:
        response = upload_file(download_location)
    except:
        await msg.edit_text("Video size should be less than 5mb!") 
    else:
        await msg.edit_text(f'**https://telegra.ph{response[0]}**',
            disable_web_page_preview=True,
        )
    finally:
        os.remove(download_location)

@Webot.on_message(filters.text)
async def telegraphtext(client, message):
    msg = await message.reply_text("·¥ú·¥ò ü·¥è·¥Ä·¥Ö…™…¥…¢ ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú...")
    download_location = await client.download_media(
        message=message, file_name='root/jetg')
    try:
        response = upload_file(download_location)
    except:
        await msg.edit_text("text should be less than 5mb!") 
    else:
        await msg.edit_text(f'**https://telegra.ph{response[0]}**',
            disable_web_page_preview=True,
        )
    finally:
        os.remove(download_location)

@Webot.on_callback_query()
async def button(bot, update):
      cb_data = update.data
      if "help" in cb_data:
        await update.message.delete()
        await help(bot, update.message)
      elif "about" in cb_data:
        await update.message.delete()
        await about(bot, update.message)
      elif "start" in cb_data:
        await update.message.delete()
        await start(bot, update.message)

print(
    """
Nibba bot started successfully üíò!
Join @santhuvc
"""
)

Webot.run()
